version: "3"

services:
  tooljet:
    tty: true
    stdin_open: true
    container_name: ${CONTAINER_NAME}
    image: tooljet/tooljet:ee-lts-latest
    restart: unless-stopped
    #env_file: .env
    ports:
      - ${PANEL_APP_PORT_HTTP}:80
    networks:
      - 1panel-network
    environment:
      SERVE_CLIENT: true
      PORT: "${PANEL_APP_PORT_HTTP}"
      CHECK_FOR_UPDATES: false
      DISABLE_SIGNUPS: false
      USER_SESSION_EXPIRY: 2880
      ORM_LOGGING: "all"
      # secret
      TOOLJET_HOST: "http://localhost:80" ## todo validate
      LOCKBOX_MASTER_KEY: "8bc1f096a6fedf0c18dfabccedd0953252bd413148a819dfdc0c74cf58e7b58b" # openssl rand -hex 32
      SECRET_KEY_BASE: "8a719135ec15c4879e090302a3d9a9be814cdbad44a9f89873f9239db49caca7d53cbc58004e7ab84db81d168c115bcad4a2dec0c78635d1e10ab68aafe61276" # openssl rand -hex 64
      # redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      #REDIS_USER: default
      REDIS_PASSWORD: ""
      # pg 
      PG_DB:   ${DB_NAME} # Databse name
      PG_USER: ${DB_USER} # Postgres database username
      PG_HOST: ${DB_HOST}
      PG_PASS: ${DB_PASSWORD} # Postgres database password
      PG_PORT: ${DB_PORT} #5432
      # db
      ENABLE_TOOLJET_DB: false
      TOOLJET_DB: "${DB_NAME}" #tooljet_db
      TOOLJET_DB_USER: "${DB_USER}"
      TOOLJET_DB_HOST: "${DB_HOST}"
      TOOLJET_DB_PASS: "${DB_PASSWORD}"
    command: npm run start:prod
    labels:
      createdBy: "Apps"

  # Uncomment if ENABLE_TOOLJET_DB=true
  postgrest:
    image: postgrest/postgrest:v12.2.0
    restart: always
    #env_file: .env
    environment:
      - PGRST_SERVER_PORT=80
      #- PGRST_DB_PRE_CONFIG=postgrest.pre_config
      - PGRST_HOST=${DB_HOST}
      - PGRST_DB_URI=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
      - PGRST_JWT_SECRET=8bc1f096a6fedf0c18dfabccedd0953252bd413148a819dfdc0c74cf58e7b58b  # openssl rand -hex 32

networks:
  1panel-network:
    external: true